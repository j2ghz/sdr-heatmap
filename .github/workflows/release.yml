on:
  push:
    tags:
      - "v*"

name: Release

jobs:
  create:
    name: Create release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
  build:
    name: Build & Upload Release Asset
    needs: create
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest , target: x86_64-unknown-linux-gnu     , cross: false, ext: ""     }
          - { os: ubuntu-latest , target: armv7-unknown-linux-gnueabihf, cross: true , ext: ""     }
          - { os: ubuntu-latest , target: aarch64-unknown-linux-gnu    , cross: true , ext: ""     }
          - { os: windows-latest, target: x86_64-pc-windows-msvc       , cross: false, ext: ".exe" }
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3.1.0
        
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --target ${{ matrix.target }} --release

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./target/${{ matrix.target }}/release/sdr-heatmap${{ matrix.ext }}
          asset_name: sdr-heatmap_${{ matrix.target }}${{ matrix.ext }}
          asset_content_type: application/octet-stream